population_calculator_multifunctional = {
	if = {
		limit = {
			check_variable = { population > 0 } # check for overflow
		}
		
		divide_variable = { population = ROOT.divider }
		
		#print_variables = {
		#	file = check_effect
		#	text = Population_pre
		#	append = yes
		#	var_list = {
		#		population
		#		ROOT.divider
		#		ROOT.randomizer
		#		ROOT.rounder
		#	}
		#}
		
		set_temp_variable = { population_factor = population }
		multiply_temp_variable = { population_factor = ROOT.randomizer }
		multiply_temp_variable = { population_factor = random }
		
		random_list = {
			50 = {
				multiply_temp_variable = { population_factor = -1 }
			}
			
			50 = {
				# nothing
			}
		}
		
		add_to_variable = { population = population_factor }
		
		divide_variable = { population = ROOT.rounder }
		round_variable = population
		multiply_variable = { population = ROOT.rounder }
		
		#print_variables = {
		#	file = check_effect
		#	text = Population_post
		#	append = yes
		#	var_list = {
		#		population
		#		population_factor
		#	}
		#}
	}
	
	else = {
		set_variable = { population = state_population_k }
		multiply_variable = { population = ROOT.divider }
		
		set_temp_variable = { population_factor = population }
		multiply_temp_variable = { population_factor = ROOT.randomizer }
		multiply_temp_variable = { population_factor = random }
		
		random_list = {
			50 = {
				multiply_temp_variable = { population_factor = -1 }
			}
			
			50 = {
				# nothing
			}
		}
		
		add_to_variable = { population = population_factor }
		multiply_variable = { population = 1000 }
	}
}

population_calculator_multifunctional_k = {
	multiply_variable = { population_k = ROOT.divider }
	
	set_temp_variable = { population_factor_k = population_k }
	multiply_temp_variable = { population_factor_k = ROOT.randomizer }
	
	set_temp_variable = { population_factor_k = random }
	multiply_temp_variable = { population_factor_k = random }
	
	random_list = {
		50 = {
			multiply_temp_variable = { population_factor_k = -1 }
		}
		
		50 = {
			# nothing
		}
	}
	
	add_to_variable = { population_k = population_factor_k }
}

population_calculator_cleaner = {
	clear_variable = divider
	clear_variable = randomizer
	clear_variable = rounder
}

population_calculator_cleaner_k = {
	clear_variable = divider
	clear_variable = randomizer
}

population_clr_junk = {
	clear_variable = population
	clear_variable = population_sum
}

population_calculation_for_sum = {
	add_to_variable = { ROOT.population_sum = population }
	
	add_manpower = population
	
	#print_variables = {
	#	file = check_effect
	#	text = Population_post
	#	append = yes
	#	print_global = yes
	#	var_list = {
	#		population
	#		ROOT.population_sum
	#	}
	#}
}

population_calculation_for_sum_k = {
	add_to_variable = { ROOT.population_sum_k = population_k }
	
	multiply_variable = { population_k = 1000 }
	add_manpower = population_k
}

increase_population_multifunctional_preset = {
	multiply_variable = { population = -1 }
	set_variable = { refugees = population }
}

NTR_calculate_political_path_if_necessary = {
	if = {
		limit = {
			NOT = {
				OR = {
					has_country_flag = NTR_AI_VEDINA
					has_country_flag = NTR_AI_TRADE
					has_country_flag = NTR_AI_UNITED_NORTH
					has_country_flag = NTR_AI_TOWARDS_REVOLUTION
					has_country_flag = NTR_AI_TRADITIONS
					has_country_flag = NTR_AI_SYNTHESIS
				}
			}
		}
		
		random_list = {
			20 = { set_country_flag = NTR_AI_VEDINA }
			20 = { set_country_flag = NTR_AI_TRADE }
			15 = { set_country_flag = NTR_AI_UNITED_NORTH }
			15 = { set_country_flag = NTR_AI_TOWARDS_REVOLUTION }
			15 = { set_country_flag = NTR_AI_TRADITIONS }
			15 = { set_country_flag = NTR_AI_SYNTHESIS }
			
			# expand for future secret paths #???
		}
	}
}

NTR_set_demilitarized_zones = {
	563 = {
		set_demilitarized_zone = yes
	}
	
	567 = {
		set_demilitarized_zone = yes
	}
	
	573 = {
		set_demilitarized_zone = yes
	}
	
	574 = {
		set_demilitarized_zone = yes
	}
	
	602 = {
		set_demilitarized_zone = yes
	}
}

NTR_remove_demilitarized_zones = {
	563 = {
		set_demilitarized_zone = no
	}
	
	567 = {
		set_demilitarized_zone = no
	}
	
	573 = {
		set_demilitarized_zone = no
	}
	
	574 = {
		set_demilitarized_zone = no
	}
	
	602 = {
		set_demilitarized_zone = no
	}
}

NTR_increase_poverty_effect = {
	if = {
		limit = {
			has_idea = poverty5
		}
		
		add_ideas = poverty5
	}
	
	else_if = {
		limit = {
			has_idea = poverty4
		}
		
		swap_ideas = {
			remove_idea = poverty5
			add_idea = poverty4
		}
	}
	
	else_if = {
		limit = {
			has_idea = poverty3
		}
		
		swap_ideas = {
			remove_idea = poverty4
			add_idea = poverty3
		}
	}
	
	else_if = {
		limit = {
			has_idea = poverty2
		}
		
		swap_ideas = {
			remove_idea = poverty3
			add_idea = poverty2
		}
	}
	
	else_if = {
		limit = {
			has_idea = poverty1
		}
		
		swap_ideas = {
			remove_idea = poverty2
			add_idea = poverty1
		}
	}
	
	else_if = {
		limit = {
			has_idea = poverty
		}
		
		swap_ideas = {
			remove_idea = poverty1
			add_idea = poverty
		}
	}
	
	else = {
		add_political_power = -75
		add_stability = 0.05
	}
}

NTR_up_to_pre_industrial_ROOT_effect = {
	if = {
		limit = {
			has_idea = agrarian_society2
		}
		
		swap_ideas = {
			remove_idea = agrarian_society
			add_idea = agrarian_society2
		}
	}
	
	else_if = {
		limit = {
			has_idea = agrarian_society3
		}
		
		swap_ideas = {
			remove_idea = agrarian_society2
			add_idea = agrarian_society3
		}
	}
	
	else_if = {
		limit = {
			has_idea = agrarian_society4
		}
		
		swap_ideas = {
			remove_idea = agrarian_society3
			add_idea = agrarian_society4
		}
	}
	
	else_if = {
		limit = {
			has_idea = agrarian_society5
		}
		
		swap_ideas = {
			remove_idea = agrarian_society4
			add_idea = agrarian_society5
		}
	}
	
	else = {
		swap_ideas = {
			remove_idea = agrarian_society5
			add_idea = agrarian_society6
		}
	}
}

NTR_up_to_pre_industrial_FROM_effect = {
	if = {
		limit = {
			FROM = {
				has_idea = modern_society
			}
		}
		
		if = {
			limit = {
				FROM = {
					any_owned_state = {
						is_coastal = yes
					}
				}
			}
			
			add_political_power = -35
		}
		
		else = {
			add_political_power = -40
		}
	}
	
	else_if = {
		limit = {
			FROM = {
				has_idea = outdated_industry
			}
		}
		
		if = {
			limit = {
				FROM = {
					any_owned_state = {
						is_coastal = yes
					}
				}
			}
			
			add_political_power = -50
		}
		
		else = {
			add_political_power = -60
		}
	}
	
	else_if = {
		limit = {
			FROM = {
				has_idea = pre_industrial_society
			}
		}
		
		if = {
			limit = {
				FROM = {
					any_owned_state = {
						is_coastal = yes
					}
				}
			}
			
			add_political_power = -65
		}
		
		else = {
			add_political_power = -80
		}
	}
	
	else = {
		add_political_power = -100
	}
}

one_random_industrial_complex_save_as_target = {
	random_owned_controlled_state = {
		limit = {
			free_building_slots = {
				building = industrial_complex
				size > 0
				include_locked = yes
			}
			
			OR = {
				is_in_home_area = yes
				
				NOT = {
					ROOT = {
						any_owned_state = {
							is_in_home_area = yes
							
							free_building_slots = {
								building = industrial_complex
								size > 0
								include_locked = yes
							}
						}
					}
				}
			}
		}
		
		add_extra_state_shared_building_slots = 1
		
		add_building_construction = {
			type = industrial_complex
			level = 1
			instant_build = yes
		}
		
		set_variable = { one_random_industrial_complex_target = id }
	}
}

one_random_dockyard_save_as_target = {
	if = {
		limit = {
			any_owned_state = {
				is_controlled_by = PREV
				is_coastal = yes
			}
			
			NOT = {
				any_owned_state = {
					is_controlled_by = PREV
					
					dockyard > 0
					
					free_building_slots = {
						building = dockyard
						size > 2
						include_locked = yes
					}
				}
			}
		}
		
		random_owned_controlled_state = {
			limit = {
				is_coastal = yes
				
				free_building_slots = {
					building = dockyard
					size > 2
					include_locked = yes
				}
			}
			
			add_extra_state_shared_building_slots = 1
			
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			
			set_variable = { one_random_dockyard_target = id }
		}
	}
	
	else_if = {
		limit = {
			NOT = {
				has_country_flag = naval_effort_built
			}
			
			any_owned_state = {
				is_controlled_by = PREV
				
				dockyard > 0
				
				free_building_slots = {
					building = dockyard
					size > 1
					include_locked = yes
				}
			}
		}
		
		random_owned_controlled_state = {
			limit = {
				dockyard > 0
				
				free_building_slots = {
					building = dockyard
					size > 1
					include_locked = yes
				}
			}
			
			add_extra_state_shared_building_slots = 1
			
			add_building_construction = {
				type = dockyard
				level = 1
				instant_build = yes
			}
			
			set_variable = { one_random_dockyard_target = id }
		}
	}
}

factories_calculation = { # Tribute shit #NotInUse
	set_temp_variable = { industrial_complexes_check = industrial_complex_level }
	divide_temp_variable = { industrial_complexes_check = 2 }
	
	if = {
		limit = {
			check_variable = {
				var = industrial_complexes_check
				value = add_industrial_complexes
				compare = not_equals
			}
		}
		
		var:to_country = {
			add_offsite_building = {
				type = industrial_complex
				level = add_industrial_complexes
			}
		}
		
		multiply_variable = { add_industrial_complexes = -1 }
		
		ROOT = {
			add_offsite_building = {
				type = industrial_complex
				level = add_industrial_complexes
			}
		}
		
		set_variable = { add_industrial_complexes = industrial_complexes_check }
		multiply_variable = { add_industrial_complexes = -1 }
		
		var:to_country = {
			add_offsite_building = {
				type = industrial_complex
				level = add_industrial_complexes
			}
		}
		
		multiply_variable = { add_industrial_complexes = -1 }
		
		ROOT = {
			add_offsite_building = {
				type = industrial_complex
				level = add_industrial_complexes
			}
		}
	}
	
	set_temp_variable = { arms_factories_check = arms_factory_level }
	divide_temp_variable = { arms_factories_check = 2 }
	
	if = {
		limit = {
			check_variable = {
				var = arms_factories_check
				value = add_arms_factories
				compare = not_equals
			}
		}
		
		var:to_country = {
			add_offsite_building = {
				type = arms_factory
				level = add_arms_factories
			}
		}
		
		multiply_variable = { add_arms_factories = -1 }
		
		ROOT = {
			add_offsite_building = {
				type = arms_factory
				level = add_arms_factories
			}
		}
		
		set_variable = { add_arms_factories = arms_factories_check }
		multiply_variable = { add_arms_factories = -1 }
		
		var:to_country = {
			add_offsite_building = {
				type = arms_factory
				level = add_arms_factories
			}
		}
		
		multiply_variable = { add_arms_factories = -1 }
		
		ROOT = {
			add_offsite_building = {
				type = arms_factory
				level = add_arms_factories
			}
		}
	}
}

calculate_military_ai_bahavior = {
	if = {
		limit = {
			is_ai = yes
		}
		
		country_event = Ntribes.1000
	}
}
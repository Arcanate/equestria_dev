calculate_EaW_state_winter_debuffer_in_October = {
	set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
	divide_temp_variable = { EaW_state_winter_modifier_temp_var = 4 } # 0.5/0.4 -> 0.125/0.1
	add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
}
calculate_EaW_state_winter_debuffer_in_November = {
	if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 3 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 3 } # 0.3 - > 0.1
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else = { # 4-5
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 2 } # 0.5/0.4 -> 0.25/0.2
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
}
calculate_EaW_state_winter_debuffer_in_December = {
	if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 2 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 2 } # 0.2 -> 0.1
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else_if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 3 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 1.5 } # 0.3 -> 0.2
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else = { # 4-5
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		multiply_temp_variable = { EaW_state_winter_modifier_temp_var = 0.75 } # 0.5 -> 0.375
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
}
calculate_EaW_state_winter_debuffer_in_February = {
	if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 5 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		multiply_temp_variable = { EaW_state_winter_modifier_temp_var = 0.8 } # 0.5 -> 0.4
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else_if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 4 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		multiply_temp_variable = { EaW_state_winter_modifier_temp_var = 0.75 } # 0.4 -> 0.3
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else_if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 3 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 1.5 } # 0.3 - > 0.2
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else = {
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 2 } # 0.2 - > 0.1
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
}
calculate_EaW_state_winter_debuffer_in_March = {
	if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 3 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 3 } # 0.3 -> 0.1
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else_if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 4 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 2 } # 0.4 -> 0.2
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else = {
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		multiply_temp_variable = { EaW_state_winter_modifier_temp_var = 0.6 } # 0.5 -> 0.3
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
}
calculate_EaW_state_winter_debuffer_in_April = {
	if = {
		limit = {
			check_variable = { EaW_state_winter_grade_var = 4 }
		}
		
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		divide_temp_variable = { EaW_state_winter_modifier_temp_var = 4 } # 0.4 -> 0.1
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
	else = {
		set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
		multiply_temp_variable = { EaW_state_winter_modifier_temp_var = 0.4 } # 0.5 -> 0.2
		add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
	}
}
calculate_EaW_state_winter_debuffer_in_May = {
	set_temp_variable = { EaW_state_winter_modifier_temp_var = EaW_state_winter_debuffer_var }
	divide_temp_variable = { EaW_state_winter_modifier_temp_var = 5 } # 0.5 -> 0.1
	add_to_variable = { PREV.EaW_country_winter_dynamic_modifier_var = EaW_state_winter_modifier_temp_var }
}

add_EaW_winter_dynamic_modifier_effects = {
	set_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = EaW_country_winter_dynamic_modifier_var }
	
	if = {
		limit = {
			has_idea = modern_society
		}
		
		multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.2 }
	}
	else_if = {
		limit = { # >= outdated
			check_variable = {
				var = EaW_society_development_var
				compare = greater_than_or_equals
				value = 5
			}
		}
		
		if = {
			limit = {
				has_idea = outdated_industry
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.3 }
		}
		else = {
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.25 }
		}
	}
	else_if = {
		limit = { # >= industrializing
			check_variable = {
				var = EaW_society_development_var
				compare = greater_than_or_equals
				value = 4
			}
		}
		
		if = {
			limit = {
				has_idea = pre_industrial_society
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.5 }
		}
		else_if = {
			limit = {
				has_idea = pre_industrial_society1
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.45 }
		}
		else_if = {
			limit = {
				has_idea = pre_industrial_society2
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.4 }
		}
		else = {
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.35 }
		}
	}
	else_if = {
		limit = { # >= agrarian
			check_variable = {
				var = EaW_society_development_var
				compare = greater_than_or_equals
				value = 3
			}
		}
		
		if = {
			limit = {
				has_idea = agrarian_society
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.8 }
		}
		else_if = {
			limit = {
				has_idea = agrarian_society2
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.75 }
		}
		else_if = {
			limit = {
				has_idea = agrarian_society3
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.7 }
		}
		else_if = {
			limit = {
				has_idea = agrarian_society4
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.65 }
		}
		else_if = {
			limit = {
				has_idea = agrarian_society5
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.6 }
		}
		else = {
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.55 }
		}
	}
	else_if = {
		limit = { # >= communal
			check_variable = {
				var = EaW_society_development_var
				compare = greater_than_or_equals
				value = 2
			}
		}
		
		if = {
			limit = {
				has_idea = communal_society2
			}
			
			multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.85 }
		}
		else = {
			if = {
				limit = {
					has_completed_focus = NTR_modernize_communes
				}
				
				if = {
					limit = {
						has_completed_focus = NTR_autonomous_communes
					}
					
					multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.45 }
				}
				else = {
					multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.675 }
				}
			}
			else = {
				multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 0.9 }
			}
		}
	}
	else = { # detached or tribal
		multiply_temp_variable = { EaW_winter_dynamic_modifier_debuffer_temp_var = 1 }
	}
	
	set_variable = { EaW_winter_efficiency_gain_debuff_var = 1 }
	add_to_variable = { EaW_winter_efficiency_gain_debuff_var = modifier@production_factory_efficiency_gain_factor }
	multiply_variable = { EaW_winter_efficiency_gain_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_line_change_debuff_var = 1 }
	add_to_variable = { EaW_winter_line_change_debuff_var = modifier@line_change_production_efficiency_factor }
	multiply_variable = { EaW_winter_line_change_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_factory_capacity_debuff_var = 1 }
	add_to_variable = { EaW_winter_factory_capacity_debuff_var = modifier@industrial_capacity_factory }
	multiply_variable = { EaW_winter_factory_capacity_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_dockyard_capacity_debuff_var = 1 }
	add_to_variable = { EaW_winter_dockyard_capacity_debuff_var = modifier@industrial_capacity_dockyard }
	multiply_variable = { EaW_winter_dockyard_capacity_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_buildings_speed_debuff_var = 1 }
	add_to_variable = { EaW_winter_buildings_speed_debuff_var = modifier@production_speed_buildings_factor }
	multiply_variable = { EaW_winter_buildings_speed_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_research_speed_debuff_var = 1 }
	add_to_variable = { EaW_winter_research_speed_debuff_var = modifier@research_speed_factor }
	multiply_variable = { EaW_winter_research_speed_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_local_resources_debuff_var = 1 }
	add_to_variable = { EaW_winter_local_resources_debuff_var = modifier@local_resources_factor }
	multiply_variable = { EaW_winter_local_resources_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_monthly_population_debuff_var = 1 }
	add_to_variable = { EaW_winter_monthly_population_debuff_var = modifier@monthly_population }
	multiply_variable = { EaW_winter_monthly_population_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_fuel_gain_factor_from_states_debuff_var = 1 }
	add_to_variable = { EaW_winter_fuel_gain_factor_from_states_debuff_var = modifier@fuel_gain_factor_from_states }
	multiply_variable = { EaW_winter_fuel_gain_factor_from_states_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	
	set_variable = { EaW_winter_consumer_goods_debuff_var = modifier@consumer_goods_factor }
	multiply_variable = { EaW_winter_consumer_goods_debuff_var = EaW_winter_dynamic_modifier_debuffer_temp_var }
	multiply_variable = { EaW_winter_consumer_goods_debuff_var = -1 }
	
	add_dynamic_modifier = { modifier = EaW_winter_dynamic_modifier }
	adjust_research_modifier = yes
}

calculate_EaW_winter_dynamic_modifier_effects = {
	divide_variable = { EaW_country_winter_dynamic_modifier_var = num_controlled_states }
	add_EaW_winter_dynamic_modifier_effects = yes
}

EaW_winter_dynamic_modifier_on = {
	calculate_EaW_winter_dynamic_modifier_effects = yes
	
	country_event = { id = Ntribes.995 days = 6 random = 48 } # randomize recalculation
	log = "[GetDateText]: [This.GetName]: self-triggering event Ntribes.995 started"
}

adjust_EaW_winter_dynamic_modifier = {
	if = {
		limit = {
			has_dynamic_modifier = { modifier = EaW_winter_dynamic_modifier }
		}
		
		remove_dynamic_modifier = { modifier = EaW_winter_dynamic_modifier }
		add_EaW_winter_dynamic_modifier_effects = yes
	}
}

calculate_EaW_frozen_seas_dynamic_modifier_effects = {
	#if = { # winter_static_effects #???
	#	limit = {
	#		has_idea = free_trade
	#	}
	#	
	#	if = {
	#		limit = {
	#			has_idea = NTR_free_trade_idea
	#		}
	#		
	#		set_variable = { var_frozen_seas_factory_capacity_debuff = 0.2 }
	#		set_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.2 }
	#		set_variable = { var_frozen_seas_buildings_speed_debuff = 0.2 }
	#		set_variable = { var_frozen_seas_research_speed_debuff = 0.125 }
	#	}
	#	else_if = {
	#		limit = {
	#			has_idea = NTR_extensive_free_trade_idea
	#		}
	#		
	#		set_variable = { var_frozen_seas_factory_capacity_debuff = 0.25 }
	#		set_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.25 }
	#		set_variable = { var_frozen_seas_buildings_speed_debuff = 0.25 }
	#		set_variable = { var_frozen_seas_research_speed_debuff = 0.15 }
	#	}
	#	else = {
	#		set_variable = { var_frozen_seas_factory_capacity_debuff = 0.15 }
	#		set_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.15 }
	#		set_variable = { var_frozen_seas_buildings_speed_debuff = 0.15 }
	#		set_variable = { var_frozen_seas_research_speed_debuff = 0.1 }
	#	}
	#	
	#	if = {
	#		limit = {
	#			has_decision = NTR_develop_internal_maritime_traffic
	#		}
	#		
	#		add_to_variable = { var_frozen_seas_factory_capacity_debuff = 0.05 }
	#		add_to_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.05 }
	#		add_to_variable = { var_frozen_seas_buildings_speed_debuff = 0.05 }
	#	}
	#}
	#else_if = {
	#	limit = {
	#		has_idea = export_focus
	#	}
	#	
	#	set_variable = { var_frozen_seas_factory_capacity_debuff = 0.1 }
	#	set_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.1 }
	#	set_variable = { var_frozen_seas_buildings_speed_debuff = 0.1 }
	#	set_variable = { var_frozen_seas_research_speed_debuff = 0.05 }
	#	
	#	if = {
	#		limit = {
	#			has_decision = NTR_develop_internal_maritime_traffic
	#		}
	#		
	#		add_to_variable = { var_frozen_seas_factory_capacity_debuff = 0.05 }
	#		add_to_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.05 }
	#		add_to_variable = { var_frozen_seas_buildings_speed_debuff = 0.05 }
	#	}
	#}
	#else = { # limited exports
	#	set_variable = { var_frozen_seas_factory_capacity_debuff = 0.05 }
	#	set_variable = { var_frozen_seas_dockyard_capacity_debuff = 0.05 }
	#	set_variable = { var_frozen_seas_buildings_speed_debuff = 0.05 }
	#	set_variable = { var_frozen_seas_research_speed_debuff = 0.01 }
	#}
	
	set_variable = { EaW_frozen_seas_navy_fuel_consumption_factor_debuff_var = 1 }
	add_to_variable = { EaW_frozen_seas_navy_fuel_consumption_factor_debuff_var = modifier@navy_fuel_consumption_factor }
	multiply_variable = { EaW_frozen_seas_navy_fuel_consumption_factor_debuff_var = NTR_icebreakers_convoys_reversed_ratio_var }
}

add_EaW_frozen_seas_dynamic_effects = {
	calculate_EaW_frozen_seas_dynamic_modifier_effects = yes
	add_dynamic_modifier = { modifier = EaW_frozen_seas_dynamic_modifier }
	
	if = {
		limit = {
			NOT = {
				any_of_scopes = {
					array = controlled_states
					
					is_on_continent = europe
				}
			}
		}
		
		every_other_country = {
			limit = {
				all_of_scopes = {
					array = controlled_states
					
					NOT = { is_on_continent = asia }
				}
			}
			
			add_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
			add_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
			reverse_add_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
			reverse_add_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
			
			set_country_flag = EaW_frozen_seas_@PREV.PREV
		}
	}
	
	every_other_country = {
		limit = {
			NOT = {
				is_neighbor_of = PREV
				
				has_country_flag = EaW_frozen_seas_@PREV.PREV
			}
			
			CAPITAL_SCOPE = {
				PREV.PREV.CAPITAL_SCOPE = {
					distance_to = {
						target = PREV
						value > 7114
					}
				}
			}
		}
		
		add_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
		add_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
		reverse_add_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
		reverse_add_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
		
		set_country_flag = EaW_frozen_seas_@PREV.PREV
	}
}

adjust_frozen_seas_dynamic_modifier = { #???
	if = {
		limit = {
			has_dynamic_modifier = { modifier = EaW_frozen_seas_dynamic_modifier }
		}
		
		calculate_EaW_frozen_seas_dynamic_modifier_effects = yes
	}
}

remove_EaW_frozen_seas_effects = {
	remove_dynamic_modifier = { modifier = EaW_frozen_seas_dynamic_modifier }
	clear_variable = EaW_frozen_seas_navy_fuel_consumption_factor_debuff_var
	
	every_other_country = {
		limit = {
			has_country_flag = EaW_frozen_seas_@PREV.PREV
		}
		
		remove_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
		remove_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
		
		PREV = {
			remove_opinion_modifier = { target = PREV modifier = EaW_frozen_seas }
			remove_opinion_modifier = { target = PREV modifier = NTR_frozen_seas }
		}
		
		clr_country_flag = EaW_frozen_seas_@PREV.PREV
	}
}
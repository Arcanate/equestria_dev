# Allows you to create your own dynamic keys
# to be called in localization.
# defined_text -> this is it, we're defining the text
# text -> a discrete entry that can be picked to display in loc.
# trigger -> determines if a text entry will be picked or not.
# (The triggers need to be valid for the scope the key is called in
# (eg Root or From.From).)
# localization_key -> points to the localization key
# that'll be used if trigger passes

defined_text = { # Country
	name = GetEQS_BB_for_princess_and_country
	text = {
		trigger = {
			has_completed_focus = eqs_new_equestrian_republic
		}
		localization_key = EQS_BB_for_princess_and_country_rep
	}
	text = {
		trigger = {
			NOT = { has_completed_focus = eqs_new_equestrian_republic }
		}
		localization_key = EQS_BB_for_princess_and_country_mon
	}
}
defined_text = { # Country
	name = GetEQS_BB_for_princess_and_country_desc
	text = {
		trigger = {
			has_completed_focus = eqs_new_equestrian_republic
		}
		localization_key = EQS_BB_for_princess_and_country_rep_desc
	}
	text = {
		trigger = {
			NOT = { has_completed_focus = eqs_new_equestrian_republic }
		}
		localization_key = EQS_BB_for_princess_and_country_mon_desc
	}
}
defined_text = { # Country
	name = GetEQS_BB_warn_the_empire
	text = {
		trigger = {
			event_target:griffonian_empire = { has_war = yes }
		}
		localization_key = EQS_BB_warn_the_empire_war
	}
	text = {
		trigger = {
			event_target:griffonian_empire = { has_war = no }
		}
		localization_key = EQS_BB_warn_the_empire_no_war
	}
}
defined_text = { # Country
	name = GetEQS_BB_warn_the_empire_desc
	text = {
		trigger = {
			event_target:griffonian_empire = { has_war = yes }
		}
		localization_key = EQS_BB_warn_the_empire_war_desc
	}
	text = {
		trigger = {
			event_target:griffonian_empire = { has_war = no }
		}
		localization_key = EQS_BB_warn_the_empire_no_war_desc
	}
}

#	Example:
# 
#	example_dynamic_modifier = {
#		icon = "GFX_idea_unknown" # optional, will show up in guis if icon is specified
#		enable = { always = yes } #optional, the modifier won't apply if not enabled
#		remove_trigger = { always = no } #optional, will remove the modifier if true
#
#		# list of modifiers
#		fuel_cost = 321
#		max_fuel = var_max_fuel # will be taken from a variable
#	}
#
#
#	In a script file:
#
#	effect = {
#		add_dynamic_modifier = {
#			modifier = example_dynamic_modifier
#			scope = GER # optional, if you specify this your dynamic modifier scoped to this scope (root is the effect scope)
#			days = 14 # optional, will be removed after this many days passes
#		}
#	}
#
#	can be added to countries, states or unit leaders
#	will only updated daily, unless forced by force_update_dynamic_modifier effect

	research_pre_ironclad_modifier = {
		enable = { always = yes } #optional, the modifier won't apply if not enabled
		research_speed_factor = var_research_adjustment_pre_ironclad
	}
	
	SCS_royalists = {
		icon = GFX_idea_FRA_scw_intervention_republicans_focus
		enable = {
			tag = SCS
			NOT = { has_country_flag = SCS_loyalist_win }
		}
		remove_trigger = {
			has_country_flag = SCS_loyalist_win
		}
		stability_factor = ResStabLoss
		surrender_limit = ResSurrenderLoss
	}
	
	northern_winter_dynamic_modifier = {
		icon = GFX_idea_CHN_crystal_city_research
		enable = { tag = NTR } # recalculation only for NTR
		production_factory_max_efficiency_factor = var_northern_winter_production_max_efficiency_debuff
		production_factory_efficiency_gain_factor = var_northern_winter_efficiency_gain_debuff
		production_factory_start_efficiency_factor = var_northern_winter_start_efficiency_debuff
		line_change_production_efficiency_factor = var_northern_winter_line_change_debuff
		industrial_capacity_factory = var_northern_winter_factory_capacity_debuff
		industrial_capacity_dockyard = var_northern_winter_dockyard_capacity_debuff
		production_speed_buildings_factor = var_northern_winter_buildings_speed_debuff
		research_speed_factor = var_northern_winter_research_speed_debuff
		local_resources_factor = var_northern_winter_local_resources_debuff
		MONTHLY_POPULATION = var_northern_winter_MONTHLY_POPULATION_debuff
		consumer_goods_factor = var_northern_winter_consumer_goods_debuff
	}
	
	frozen_seas_dynamic_modifier = {
		icon = GFX_idea_army_morale
		enable = { tag = NTR } # recalculation only for NTR
		industrial_capacity_factory = var_frozen_seas_factory_capacity_debuff
		industrial_capacity_dockyard = var_frozen_seas_dockyard_capacity_debuff
		production_speed_buildings_factor = var_frozen_seas_buildings_speed_debuff
		research_speed_factor = var_frozen_seas_research_speed_debuff
		trade_opinion_factor = var_frozen_seas_trade_opinion_debuff
		min_export = var_frozen_seas_min_export_debuff
		navy_fuel_consumption_factor = 0.25
	}
	
	NTR_traditionalism_influence_dynamic_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		neutrality_drift = NTR_traditionalism_influence_neutrality_drift_var # changes through events and decisions, not through recalculation
		political_power_factor = NTR_traditionalism_influence_political_power_factor_var
		stability_factor = NTR_traditionalism_influence_stability_factor_var
		war_support_factor = NTR_traditionalism_influence_war_support_factor_var
		conscription_factor = NTR_traditionalism_influence_conscription_factor_var
		offensive_war_stability_factor = NTR_traditionalism_influence_offensive_war_stability_factor_var
		enemy_justify_war_goal_time = NTR_traditionalism_influence_enemy_justify_war_goal_time_var
	}
	
	NTR_communist_partisans_dynamic_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		communism_drift = NTR_communist_partisans_communism_drift_var # changes through events and decisions, not through recalculation
		political_power_factor = NTR_communist_partisans_political_power_factor_var
		stability_factor = NTR_communist_partisans_stability_factor_var
		war_support_factor = NTR_communist_partisans_war_support_factor_var
		conscription_factor = NTR_communist_partisans_conscription_factor_var
		offensive_war_stability_factor = NTR_communist_partisans_offensive_war_stability_factor_var
	}
	
	NTR_harmonic_tribes_dynamic_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		democratic_drift = NTR_harmonic_tribes_democratic_drift_var # changes through events and decisions, not through recalculation
		political_power_factor = NTR_harmonic_tribes_political_power_factor_var
		stability_factor = NTR_harmonic_tribes_stability_factor_var
		war_support_factor = NTR_harmonic_tribes_war_support_factor_var
		conscription_factor = NTR_harmonic_tribes_conscription_factor_var
		offensive_war_stability_factor = NTR_harmonic_tribes_offensive_war_stability_factor_var
	}
	
	NTR_unite_the_tribes_democratic_drift_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		democratic_drift = NTR_unite_the_tribes_drift_var
	}
	
	NTR_unite_the_tribes_communism_drift_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		communism_drift = NTR_unite_the_tribes_drift_var
	}
	
	NTR_unite_the_tribes_neutrality_drift_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		neutrality_drift = NTR_unite_the_tribes_drift_var
	}
	
	SM_state_complexes_modifier = {
		enable = { CONTROLLER = { tag = NTR } } # recalculation only for NTR cores
		local_resources = SM_local_resources_var
	}
	
	SM_country_complexes_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		industrial_factory_donations = SM_negative_industrial_factory_donations_var
	}
	
	SM_country_factories_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		weekly_manpower = SM_weekly_manpower_var
		experience_gain_army = SM_experience_gain_army_var
		experience_gain_air = SM_experience_gain_air_var
		military_factory_donations = SM_negative_military_factory_donations_var
	}
	
	SM_state_dockyards_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		experience_gain_navy = SM_experience_gain_navy_var
		dockyard_donations = SM_negative_dockyard_donations_var
	}
	
	NTR_bonus_PP_from_vedinian_guild = {
		enable = { tag = NTR } # recalculation only for NTR
		political_power_gain = NTR_bonus_PP_from_VED_guild_var
	}
	
	NTR_griffon_race_technologies_upkeep_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		political_power_gain = NTR_griffon_race_technologies_political_power_upkeep_var
	}
	
	NTR_neverending_development_modifier = {
		enable = { tag = NTR } # recalculation only for NTR
		remove_trigger = {
			NOT = {
				OR = {
					has_idea = communal_society
					has_idea = communal_society2
				}
			}
		}
		production_factory_max_efficiency_factor = NTR_neverending_development_max_efficiency_var
		industrial_capacity_factory = NTR_neverending_development_industrial_capacity_factory_var
		industrial_capacity_dockyard = NTR_neverending_development_industrial_capacity_dockyard_var
		production_speed_buildings_factor = NTR_neverending_development_construction_speed_buildings_var
		research_speed_factor = NTR_neverending_development_research_speed_var
		MONTHLY_POPULATION = NTR_neverending_development_MONTHLY_POPULATION_var
		local_resources_factor = NTR_neverending_development_local_resources_var
	}
	
	de_facto_non_core_state = {
		enable = { always = yes }
		remove_trigger = { NOT = { is_core_of = OWNER } }
		local_manpower = -0.8
	}
	
	particulary_core_state = {
		enable = { always = yes }
		remove_trigger = { NOT = { is_core_of = OWNER } }
		local_manpower = -0.6
	}
	
	power_for_the_strongest = {
		enable = { always = yes }
		remove_trigger = { OWNER = { NOT = { tag = NTR } } }
		local_non_core_manpower = 0.18
	}
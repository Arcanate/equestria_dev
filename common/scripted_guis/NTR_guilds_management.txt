scripted_gui = {
	NTR_guilds_management_of_states = {
		window_name = "NTR_slots_investment"
		parent_window_token = selected_state_view
		context_type = selected_state_context
		
		visible = {
			ROOT = {
				has_country_flag = NTR_guilds_scripted_GUI_unlocked # remove on_action
				
				has_government = democratic
			}
			
			is_core_of = ROOT
			is_owned_and_controlled_by = ROOT
		}
		
		triggers = {
			NTR_complexes_investments_amount_textbox_click_enabled = {
				always = no
			}
			NTR_complexes_investments_remove_button_click_enabled = {
				check_variable = { NTR_state_amount_of_invested_complexes > 0 }
			}
			NTR_complexes_investments_add_button_click_enabled = {
				industrial_complex > 0
				#OWNER = { has_political_power > 19 }
			}
			
			NTR_factories_investments_amount_textbox_click_enabled = {
				always = no
			}
			NTR_factories_investments_remove_button_click_enabled = {
				check_variable = { NTR_state_amount_of_invested_factories > 0 }
			}
			NTR_factories_investments_add_button_click_enabled = {
				arms_factory > 0
				#OWNER = { has_political_power > 19 }
			}
			
			NTR_dockyards_investments_amount_textbox_click_enabled = {
				always = no
			}
			NTR_dockyards_investments_remove_button_click_enabled = {
				check_variable = { NTR_state_amount_of_invested_dockyards > 0 }
			}
			NTR_dockyards_investments_add_button_click_enabled = {
				dockyard > 0
				#OWNER = { has_political_power > 19 }
			}
		}
		
		effects = {
			NTR_complexes_investments_remove_button_click = {
				add_building_construction = { type = industrial_complex level = 1 instant_build = yes }
				add_extra_state_shared_building_slots = 1
				
				hidden_effect = {
					remove_dynamic_modifier = { modifier = NTR_state_complexes_modifier }
					
					if = {
						limit = { check_variable = { NTR_state_amount_of_invested_complexes = 1 } }
						
						set_variable = { NTR_state_amount_of_invested_complexes = 0 }
						clear_variable = NTR_dynamic_bonus_monthly_population_percent
						clear_variable = NTR_bonus_local_resources_percent
						
						OWNER = {
							if = {
								limit = { check_variable = { NTR_country_amount_of_invested_complexes = 1 } }
								
								set_variable = { NTR_country_amount_of_invested_complexes = 0 }
								clear_variable = NTR_civil_research_savings
							}
							else = {
								subtract_from_variable = { NTR_country_amount_of_invested_complexes = 1 }
							}
						}
					}
					else = {
						subtract_from_variable = { NTR_bonus_monthly_population_percent = NTR_dynamic_bonus_monthly_population_percent }
						
						divide_variable = { NTR_dynamic_bonus_monthly_population_percent = NTR_state_amount_of_invested_complexes }
						divide_variable = { NTR_bonus_local_resources_percent = NTR_state_amount_of_invested_complexes }
						subtract_from_variable = { NTR_state_amount_of_invested_complexes = 1 }
						multiply_variable = { NTR_dynamic_bonus_monthly_population_percent = NTR_state_amount_of_invested_complexes }
						multiply_variable = { NTR_bonus_local_resources_percent = NTR_state_amount_of_invested_complexes }
						
						add_to_variable = { NTR_bonus_monthly_population_percent = NTR_dynamic_bonus_monthly_population_percent }
						
						add_dynamic_modifier = { modifier = NTR_state_complexes_modifier }
						
						OWNER = {
							divide_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
							subtract_from_variable = { NTR_country_amount_of_invested_complexes = 1 }
							multiply_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
						}
					}
				}
			}
			NTR_complexes_investments_add_button_click = {
				remove_building = { type = industrial_complex level = 1 }
				add_extra_state_shared_building_slots = -1
				
				OWNER = {
					add_political_power = -20
				}
				
				hidden_effect = {
					if = {
						limit = { has_dynamic_modifier = { modifier = NTR_state_complexes_modifier } }
						
						remove_dynamic_modifier = { modifier = NTR_state_complexes_modifier }
						
						subtract_from_variable = { NTR_bonus_monthly_population_percent = NTR_dynamic_bonus_monthly_population_percent }
						
						divide_variable = { NTR_dynamic_bonus_monthly_population_percent = NTR_state_amount_of_invested_complexes }
						divide_variable = { NTR_bonus_local_resources_percent = NTR_state_amount_of_invested_complexes }
						add_to_variable = { NTR_state_amount_of_invested_complexes = 1 }
						multiply_variable = { NTR_dynamic_bonus_monthly_population_percent = NTR_state_amount_of_invested_complexes }
						multiply_variable = { NTR_bonus_local_resources_percent = NTR_state_amount_of_invested_complexes }
						
						add_to_variable = { NTR_bonus_monthly_population_percent = NTR_dynamic_bonus_monthly_population_percent }
						
						OWNER = {
							divide_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
							add_to_variable = { NTR_country_amount_of_invested_complexes = 1 }
							multiply_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
						}
					}
					else = {
						OWNER = {
							if = {
								limit = { NOT = { has_variable = NTR_civil_research_savings } }
								
								set_variable = { NTR_civil_research_savings = 0.02 }
								multiply_variable = { NTR_civil_research_savings = modifier@research_speed_factor }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.3 started"
								country_event = { # daily variable increase
									id = Ntribes_states.3
									days = 1
								}
							}
							else = {
								divide_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
								add_to_variable = { NTR_country_amount_of_invested_complexes = 1 }
								multiply_variable = { NTR_civil_research_savings = NTR_country_amount_of_invested_complexes }
							}
							
							if = {
								limit = { NOT = { has_variable = NTR_country_amount_of_invested_complexes } }
								
								set_variable = { NTR_country_amount_of_invested_complexes = 1 }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.4 started"
								country_event = { # periodical recalculations
									id = Ntribes_states.4
									days = 7
								}
							}
						}
						
						set_variable = { NTR_state_amount_of_invested_complexes = 1 }
						
						set_variable = { NTR_dynamic_bonus_monthly_population_percent = 1 }
						add_to_variable = { NTR_dynamic_bonus_monthly_population_percent = ROOT.modifier@production_speed_buildings_factor }
						multiply_variable = { NTR_dynamic_bonus_monthly_population_percent = 0.05 }
						
						add_to_variable = { NTR_bonus_monthly_population_percent = NTR_dynamic_bonus_monthly_population_percent }
						
						set_variable = { NTR_bonus_local_resources_percent = 1 }
						add_to_variable = { NTR_bonus_local_resources_percent = ROOT.modifier@local_resources_factor }
						multiply_variable = { NTR_bonus_local_resources_percent = 0.05 }
					}
					
					add_dynamic_modifier = { modifier = NTR_state_complexes_modifier }
				}
			}
			
			NTR_factories_investments_remove_button_click = {
				subtract_from_variable = { NTR_state_amount_of_invested_factories = 1 }
				add_building_construction = { type = arms_factory level = 1 instant_build = yes }
				add_extra_state_shared_building_slots = 1
				
				hidden_effect = {
					OWNER = {
						remove_dynamic_modifier = { modifier = NTR_guilds_factories_management_modifier }
						
						if = {
							limit = { check_variable = { NTR_country_amount_of_invested_factories = 1 } }
							
							set_variable = { NTR_country_amount_of_invested_factories = 0 }
							clear_variable = NTR_weekly_manpower_var
							clear_variable = NTR_experience_gain_army_var
							
							if = {
								limit = { has_variable = NTR_experience_gain_air_var }
								
								clear_variable = NTR_experience_gain_air_var
								clear_variable = NTR_air_research_savings
							}
							
							set_variable = { NTR_army_research_savings = 0 }
						}
						else = {
							if = {
								limit = { has_deployed_air_force_size = { size > 0 } }
								
								divide_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_air_var = NTR_country_amount_of_invested_factories }
								subtract_from_variable = { NTR_country_amount_of_invested_factories = 1 }
								multiply_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_air_var = NTR_country_amount_of_invested_factories }
							}
							else = {
								divide_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								subtract_from_variable = { NTR_country_amount_of_invested_factories = 1 }
								multiply_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
							}
							
							add_dynamic_modifier = { modifier = NTR_guilds_factories_management_modifier }
						}
					}
				}
			}
			NTR_factories_investments_add_button_click = {
				add_to_variable = { NTR_state_amount_of_invested_factories = 1 }
				remove_building = { type = arms_factory level = 1 }
				add_extra_state_shared_building_slots = -1
				
				OWNER = {
					add_political_power = -20
					
					hidden_effect = {
						if = {
							limit = { has_dynamic_modifier = { modifier = NTR_guilds_factories_management_modifier } }
							
							if = {
								limit = { has_variable = NTR_experience_gain_air_var }
								
								divide_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_air_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_army_research_savings = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_air_research_savings = NTR_country_amount_of_invested_factories }
								add_to_variable = { NTR_country_amount_of_invested_factories = 1 }
								multiply_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_air_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_army_research_savings = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_air_research_savings = NTR_country_amount_of_invested_factories }
							}
							
							else = {
								divide_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								divide_variable = { NTR_army_research_savings = NTR_country_amount_of_invested_factories }
								add_to_variable = { NTR_country_amount_of_invested_factories = 1 }
								multiply_variable = { NTR_weekly_manpower_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_experience_gain_army_var = NTR_country_amount_of_invested_factories }
								multiply_variable = { NTR_army_research_savings = NTR_country_amount_of_invested_factories }
							}
							
							remove_dynamic_modifier = { modifier = NTR_guilds_factories_management_modifier }
						}
						else = {
							if = {
								limit = { NOT = { has_variable = NTR_country_amount_of_invested_factories } }
								
								set_variable = { NTR_country_amount_of_invested_factories = 1 }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.6 started"
								country_event = { # periodical recalculations
									id = Ntribes_states.6
									days = 7
								}
							}
							else = {
								add_to_variable = { NTR_country_amount_of_invested_factories = 1 }
							}
							
							if = {
								limit = { NOT = { has_variable = NTR_army_research_savings } }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.5 started"
								country_event = { # daily variable increase
									id = Ntribes_states.5
									days = 1
								}
							}
							
							set_variable = { NTR_weekly_manpower_var = 1 }
							add_to_variable = { NTR_weekly_manpower_var = modifier@industrial_capacity_factory }
							
							set_variable = { NTR_experience_gain_army_var = NTR_weekly_manpower_var }
							multiply_variable = { NTR_experience_gain_army_var = 0.02 }
							
							multiply_variable = { NTR_weekly_manpower_var = 25 }
							
							set_variable = { NTR_army_research_savings = 0.02 }
							multiply_variable = { NTR_army_research_savings = var:modifier@research_speed_factor }
							
							if = {
								limit = { has_deployed_air_force_size = { size > 0 } }
								
								set_variable = { NTR_experience_gain_air_var = NTR_experience_gain_army_var }
								divide_variable = { NTR_experience_gain_air_var = 2 }
								
								set_variable = { NTR_air_research_savings = NTR_army_research_savings }
								divide_variable = { NTR_air_research_savings = 2 }
							}
						}
						
						add_dynamic_modifier = { modifier = NTR_guilds_factories_management_modifier }
					}
				}
			}
			
			NTR_dockyards_investments_remove_button_click = {
				add_building_construction = { type = dockyard level = 1 instant_build = yes }
				add_extra_state_shared_building_slots = 1
				
				hidden_effect = {
					OWNER = {
						remove_dynamic_modifier = { modifier = NTR_guilds_dockyards_management_modifier }
						
						if = {
							limit = { check_variable = { NTR_country_amount_of_invested_dockyards = 1 } }
							
							set_variable = { NTR_country_amount_of_invested_dockyards = 0 }
							clear_variable = NTR_experience_gain_navy_var
							set_variable = { NTR_naval_research_savings = 0 }
							
							PREV = {
								clear_variable = NTR_state_amount_of_invested_dockyards
								
								for_each_loop = {
									array = NTR_state_bonus_resources
									
									if = {
										limit = { check_variable = { v = 0 } }
										add_resource = { type = oil amount = -2 }
									}
									else_if = {
										limit = { check_variable = { v = 1 } }
										add_resource = { type = aluminium amount = -2 }
									}
									else_if = {
										limit = { check_variable = { v = 2 } }
										add_resource = { type = rubber amount = -2 }
									}
									else_if = {
										limit = { check_variable = { v = 3 } }
										add_resource = { type = tungsten amount = -2 }
									}
									else_if = {
										limit = { check_variable = { v = 4 } }
										add_resource = { type = steel amount = -2 }
									}
									else_if = {
										limit = { check_variable = { v = 5 } }
										add_resource = { type = chromium amount = -2 }
									}
									else = {
										add_resource = { type = crystals amount = -2 }
									}
								}
								
								clear_array = NTR_state_bonus_resources
							}
						}
						else = {
							divide_variable = { NTR_experience_gain_navy_var = NTR_country_amount_of_invested_dockyards }
							divide_variable = { NTR_naval_research_savings = NTR_country_amount_of_invested_dockyards }
							subtract_from_variable = { NTR_country_amount_of_invested_dockyards = 1 }
							multiply_variable = { NTR_experience_gain_navy_var = NTR_country_amount_of_invested_dockyards }
							multiply_variable = { NTR_naval_research_savings = NTR_country_amount_of_invested_dockyards }
							
							add_dynamic_modifier = { modifier = NTR_guilds_dockyards_management_modifier }
							
							PREV = {
								subtract_from_variable = { NTR_state_amount_of_invested_dockyards = 1 }
								set_temp_variable = { NTR_state_bonus_resources_last_index = NTR_state_amount_of_invested_dockyards }
								
								for_each_loop = {
									array = NTR_state_bonus_resources
									
									if = {
										limit = { check_variable = { i = NTR_state_bonus_resources_last_index } } # find last (and least important resource)
										
										if = {
											limit = { check_variable = { v = 0 } }
											add_resource = { type = oil amount = -2 }
										}
										else_if = {
											limit = { check_variable = { v = 1 } }
											add_resource = { type = aluminium amount = -2 }
										}
										else_if = {
											limit = { check_variable = { v = 2 } }
											add_resource = { type = rubber amount = -2 }
										}
										else_if = {
											limit = { check_variable = { v = 3 } }
											add_resource = { type = tungsten amount = -2 }
										}
										else_if = {
											limit = { check_variable = { v = 4 } }
											add_resource = { type = steel amount = -2 }
										}
										else_if = {
											limit = { check_variable = { v = 5 } }
											add_resource = { type = chromium amount = -2 }
										}
										else = {
											add_resource = { type = crystals amount = -2 }
										}
									}
								}
								
								remove_from_array = {
									array = NTR_state_bonus_resources
									index = NTR_state_bonus_resources_last_index
								}
							}
						}
					}
				}
			}
			NTR_dockyards_investments_add_button_click = {
				add_to_variable = { NTR_state_amount_of_invested_dockyards = 1 }
				remove_building = { type = dockyard level = 1 }
				add_extra_state_shared_building_slots = -1
				
				hidden_effect = {
					OWNER = {
						add_political_power = -20
						
						if = {
							limit = { has_dynamic_modifier = { modifier = NTR_guilds_dockyards_management_modifier } }
							
							divide_variable = { NTR_experience_gain_navy_var = NTR_country_amount_of_invested_dockyards }
							add_to_variable = { NTR_country_amount_of_invested_dockyards = 1 }
							multiply_variable = { NTR_experience_gain_navy_var = NTR_country_amount_of_invested_dockyards }
							
							remove_dynamic_modifier = { modifier = NTR_guilds_dockyards_management_modifier }
						}
						else = {
							if = {
								limit = { NOT = { has_variable = NTR_naval_research_savings } }
								
								set_variable = { NTR_naval_research_savings = 0.015	}
								multiply_variable = { NTR_naval_research_savings = var:modifier@research_speed_factor }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.7 started"
								country_event = { # daily variable increase
									id = Ntribes_states.7
									days = 1
								}
							}
							else = {
								divide_variable = { NTR_naval_research_savings = NTR_country_amount_of_invested_dockyards }
								add_to_variable = { NTR_country_amount_of_invested_dockyards = 1 }
								multiply_variable = { NTR_naval_research_savings = NTR_country_amount_of_invested_dockyards }
							}
							if = {
								limit = { NOT = { has_variable = NTR_country_amount_of_invested_dockyards } }
								
								set_variable = { NTR_country_amount_of_invested_dockyards = 1 }
								
								log = "[GetDateText]: [Root.GetName]: self-triggering event Ntribes_states.8 started"
								country_event = { # periodical recalculations
									id = Ntribes_states.8
									days = 7
								}
							}
							
							set_variable = { NTR_experience_gain_navy_var = 1 }
							add_to_variable = { NTR_experience_gain_navy_var = modifier@industrial_capacity_dockyard }
							multiply_variable = { NTR_experience_gain_navy_var = 0.02 }
						}
						
						add_dynamic_modifier = { modifier = NTR_guilds_dockyards_management_modifier }
						
						add_to_array = { NTR_required_resources = resource@oil }
						add_to_array = { NTR_required_resources = resource@aluminium }
						add_to_array = { NTR_required_resources = resource@rubber }
						add_to_array = { NTR_required_resources = resource@tungsten }
						add_to_array = { NTR_required_resources = resource@steel }
						add_to_array = { NTR_required_resources = resource@chromium }
						add_to_array = { NTR_required_resources = resource@crystals }
						
						PREV = {
							find_lowest_in_array = { array = ROOT.NTR_required_resources }
							add_to_array = { NTR_state_bonus_resources = i }
							
							if = {
								limit = { check_variable = { i = 0 } }
								add_resource = { type = oil amount = 2 }
							}
							else_if = {
								limit = { check_variable = { i = 1 } }
								add_resource = { type = aluminium amount = 2 }
							}
							else_if = {
								limit = { check_variable = { i = 2 } }
								add_resource = { type = rubber amount = 2 }
							}
							else_if = {
								limit = { check_variable = { i = 3 } }
								add_resource = { type = tungsten amount = 2 }
							}
							else_if = {
								limit = { check_variable = { i = 4 } }
								add_resource = { type = steel amount = 2 }
							}
							else_if = {
								limit = { check_variable = { i = 5 } }
								add_resource = { type = chromium amount = 2 }
							}
							else = {
								add_resource = { type = crystals amount = 2 }
							}
						}
						
						clear_array = NTR_required_resources
					}
				}
			}
		}
		
		ai_enabled = { #WiP
			always = no
		}
	}
}
# Augenis and Void were here

add_namespace = maretania
add_namespace = marcsi

country_event = { ### The Ruins of Something Great
	id = maretania.0
	immediate = {log = "[GetDateText]: [Root.GetName]: event maretania.0"}
	title = maretania.0.t
	desc = maretania.0.d
	picture = GFX_event_green_mountain

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = maretania.0.a
	}
}

country_event = { ### The Cave
	id = maretania.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event maretania.1"}
	title = maretania.1.t
	desc = maretania.1.d
	picture = GFX_event_cave

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = maretania.1.a
		remove_ideas = zebrica_legacy_of_storm3
		custom_effect_tooltip = MTA_open_cave_tt
		set_country_flag = MTA_opened_cave_flag # this flag needs to be set or clr whenever the cave needs to be accessible, fyi
		hidden_effect = {
			country_event = { id = maretania.4 days = 3 }
		}
	}
}

country_event = { ### The Analysis Committee
	id = maretania.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event maretania.2"}
	title = maretania.2.t
	desc = maretania.2.d
	picture = GFX_event_cave

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = maretania.2.a
		add_popularity = {
			ideology = communism
			popularity = 0.04
		}
	}
}
country_event = { ### The Outreach Office
	id = maretania.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event maretania.3"}
	title = maretania.3.t
	desc = maretania.3.d
	picture = GFX_event_cave

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = maretania.3.a
		add_popularity = {
			ideology = neutrality
			popularity = 0.04
		}
	}
}
country_event = { ### The Outreach Office
	id = maretania.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event maretania.4"}
	title = maretania.4.t
	desc = maretania.4.d
	picture = GFX_event_crystal_library

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = maretania.4.a
		activate_mission = MTA_quarterly_review
	}
}

####

country_event = { ### Artifact Experimentation
	id = marcsi.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.1"}
	title = marcsi.1.t
	desc = marcsi.1.d
	picture = GFX_event_cave

	is_triggered_only = yes

	option = {
		trigger = {
			any_of_scopes = {
				array = ROOT.MTA_tested_artifact
				NOT = {
					has_state_flag = MTA_figured_out_threat_flag
				}
			}
		}
		name = marcsi.1.a
		custom_effect_tooltip = MTA_experiment_tt
		country_event = marcsi.2
	}
	option = {
		trigger = {
			any_of_scopes = {
				array = ROOT.MTA_tested_artifact
				NOT = {
					has_state_flag = MTA_activated_artifact_flag
				}
			}
		}
		name = marcsi.1.b
		custom_effect_tooltip = MTA_activate_tt
		country_event = marcsi.3
	}
	option = {
		name = marcsi.1.c
		custom_effect_tooltip = MTA_secure_tt
		FROM = { set_state_flag = MTA_sealed_artifact_flag }
		MTA_deactivate_artifact_effect = yes
		clear_array = ROOT.MTA_tested_artifact
	}
}

country_event = { ### Experiment
	id = marcsi.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.2"}
	title = marcsi.2.t
	desc = {
		text = marcsi.2.d1
		trigger = { 
			1 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d3
		trigger = { 
			3 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d4
		trigger = { 
			4 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d5
		trigger = { 
			5 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d6
		trigger = { 
			6 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d7
		trigger = { 
			7 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d8
		trigger = { 
			8 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d9
		trigger = { 
			9 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.2.d10
		trigger = { 
			10 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	# ^ make a new desc entry for each artifact.
	picture = GFX_event_cave

	is_triggered_only = yes

	option = {
		name = marcsi.2.a
		custom_effect_tooltip = MTA_experimented_tt
		for_each_scope_loop = {
			array = ROOT.MTA_tested_artifact
			set_state_flag = MTA_figured_out_threat_flag
		}
		clear_array = ROOT.MTA_tested_artifact
	}
}
country_event = { ### Activate
	id = marcsi.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.3"}
	title = marcsi.3.t
	desc = {
		text = marcsi.3.d1
		trigger = { 
			1 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d3
		trigger = { 
			3 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d4
		trigger = { 
			4 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d5
		trigger = { 
			5 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d6
		trigger = { 
			6 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d7
		trigger = { 
			7 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d8
		trigger = { 
			8 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d9
		trigger = { 
			9 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	desc = {
		text = marcsi.3.d10
		trigger = { 
			10 = { is_in_array = { MTA.MTA_tested_artifact = THIS }}
		}
	}
	# ^ make a new desc entry for each artifact.
	picture = GFX_event_cave

	is_triggered_only = yes

	option = {
		name = marcsi.3.a
		for_each_scope_loop = {
			array = ROOT.MTA_tested_artifact
			set_state_flag = MTA_activated_artifact_flag
		}
		MTA_activate_artifact_effect = yes
		clear_array = ROOT.MTA_tested_artifact
	}
}
country_event = { 
	id = marcsi.4
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.4"}
	hidden = yes
	is_triggered_only = yes
	
	# Not getting artifacts is 50 chance. Common artifacts are 60 chance. Rare are 40 chance. Ultra rare are 20 chance (Skull of Sparrowber and Tartarus Portal, both super-secret paths.)

	option = {
		ai_chance = {
            factor = 50
        }
		country_event = marcsi.5
    }
    option = {
		trigger = {
			NOT = { 
				3 = { is_in_array = { MTA.MTA_owned_artifacts = THIS }}
			}
		}
		ai_chance = {
            factor = 60
        }
		country_event = marcsi.7
    }
	option = {
		trigger = {
			NOT = { 
				4 = { is_in_array = { MTA.MTA_owned_artifacts = THIS }}
			}
		}
		ai_chance = {
            factor = 60
        }
		country_event = marcsi.6
    }
	option = {
		trigger = {
			NOT = { 
				5 = { is_in_array = { MTA.MTA_owned_artifacts = THIS }}
			}
		}
		ai_chance = {
            factor = 40
        }
		country_event = marcsi.8
    }
	option = {
		trigger = {
			NOT = { 
				6 = { is_in_array = { MTA.MTA_owned_artifacts = THIS }}
			}
		}
		ai_chance = {
            factor = 40
        }
		country_event = longsword.161
    }
	option = {
		trigger = {
			NOT = { 
				7 = { is_in_array = { MTA.MTA_owned_artifacts = THIS }}
			}
		}
		ai_chance = {
            factor = 20
        }
		country_event = longsword.162
    }
}

country_event = { 
	id = marcsi.5
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.5"}
	title = marcsi.5.t
	desc = marcsi.5.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcsi.5.a
		add_political_power = -10
	}
}
country_event = { 
	id = marcsi.6
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.6"}
	title = marcsi.6.t
	desc = marcsi.6.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcsi.6.a
		custom_effect_tooltip = MTA_artifact_4_gained_tt
		4 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } 
		add_to_variable = { MTA_number_of_artifacts = 1 }
	}
}
country_event = { 
	id = marcsi.7
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.7"}
	title = marcsi.7.t
	desc = marcsi.7.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcsi.7.a
		custom_effect_tooltip = MTA_artifact_3_gained_tt
		3 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } 
		add_to_variable = { MTA_number_of_artifacts = 1 }
	}
}
country_event = { 
	id = marcsi.8
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcsi.8"}
	title = marcsi.8.t
	desc = marcsi.8.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcsi.8.a
		custom_effect_tooltip = MTA_artifact_5_gained_tt
		5 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } 
		add_to_variable = { MTA_number_of_artifacts = 1 }
	}
}
country_event = { ### Test event
	id = marcsi.1000
	immediate = {log = "[GetDateText]: [Root.GetName]: event marsci.1000"}
	title = marcsi.1000.t
	desc = marcsi.1000.d
	picture = GFX_event_cave

	is_triggered_only = yes
	fire_only_once = yes

	option = {
		name = marcsi.1000.a
		set_country_flag = MTA_opened_cave_flag # this flag needs to be set or clr whenever the cave needs to be accessible, fyi
		3 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		4 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		5 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		6 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		7 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		8 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		9 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		10 = { add_to_array = { ROOT.MTA_owned_artifacts = THIS } } # New Artifacts
		add_to_variable = { MTA_number_of_artifacts = 8 }
	}
}

add_namespace = marcycle

country_event = { 
	id = marcycle.1
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcycle.1"}
	title = marcycle.1.t
	desc = marcycle.1.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcycle.1.a
		custom_effect_tooltip = MTA_no_turning_back_tt
		clear_array = ROOT.MTA_tested_artifact
		hidden_effect = {
			country_event = { id = marcycle.2 days = 1 }
		}
	}
	option = {
		name = marcycle.1.b
		custom_effect_tooltip = MTA_secure_tt
		for_each_scope_loop = {
			array = ROOT.MTA_tested_artifact
			set_state_flag = MTA_sealed_artifact_flag
		}
		clear_array = ROOT.MTA_tested_artifact
	}
}
country_event = { 
	id = marcycle.2
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcycle.2"}
	title = marcycle.2.t
	desc = marcycle.2.d
	picture = GFX_event_griffon_diplomacy
	is_triggered_only = yes

	option = {
		name = marcycle.2.a
		custom_effect_tooltip = MTA_end_of_the_cycle_tt
		hidden_effect = {
			end_puppet_this = yes
			leave_faction = yes
			create_country_leader = {
				name = "Mustafa"
				desc = "the_little_janitor_that_could_desc"
				picture = "gfx/leaders/zebra/portrait_zebra_generic_operative_male_1.tga"
				expire = "1965.1.1"
				ideology = undead_horde
				traits = {}
			}
			set_politics = {
				ruling_party = fascism
				elections_allowed = no
			}
			set_party_name = {
				ideology = fascism
				name = MTA_end_of_the_cycle_party
				long_name = MTA_end_of_the_cycle_party
			}
			set_popularities = {
				democratic = 0
				fascism = 100
				communism = 0
				neutrality = 0
			}
			delete_unit = {
				disband = yes
			}
			every_state = {
			    limit = { is_core_of = MTA }
			    remove_core_of = MTA
		    }
			add_manpower = 1000000
			clr_country_flag = MTA_opened_cave_flag
			set_cosmetic_tag = MTA_eotc
			country_lock_all_division_template = yes
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 1000000
				producer = MTA
			}
			set_technology = {
				tech_knights = 1
				tech_knights2 = 1
				tech_knights_regular = 1
				tech_knights_regular2 = 1
				tech_knights3 = 1
				tech_knights_a = 1
				tech_knights_b = 1
				tech_knights_c = 1
				MTA_eotc_spectral_infantry_starting = 1
			}
			division_template = {
				name = "Spectral Infantry"
				is_locked = yes
				regiments = {
					knights = { x = 0 y = 0 }
					knights = { x = 0 y = 1 }
					knights = { x = 0 y = 2 }
					knights = { x = 0 y = 3 }
					knights = { x = 0 y = 4 }
					knights = { x = 1 y = 0 }
					knights = { x = 1 y = 1 }
					knights = { x = 1 y = 2 }
					knights = { x = 1 y = 3 }
					knights = { x = 1 y = 4 }					
					knights = { x = 2 y = 0 }
					knights = { x = 2 y = 1 }
					knights = { x = 2 y = 2 }
					knights = { x = 2 y = 3 }
					knights = { x = 2 y = 4 }
					knights = { x = 3 y = 0 }
					knights = { x = 3 y = 1 }
					knights = { x = 3 y = 2 }
					knights = { x = 3 y = 3 }
					knights = { x = 3 y = 4 }
				}
			}
			every_owned_state = {
				create_unit = {
					division = "name = \"Unnamed\" division_template = \"Spectral Infantry\" start_equipment_factor = 1.0 start_experience_factor = 0.3"
					owner = ROOT
					count = 15
				}
			}
			set_rule = { can_join_factions = no }
			set_rule = { can_create_factions = no }
			set_country_flag = join_factions_set
			set_country_flag = trade_laws_blocked
			add_ideas = {
				closed_economy
				EOTC_reckoning
				EOTC_no_generals
				EOTC_no_government
			}
			remove_ideas = {
				MTA_CSI
				MTA_CSI_2
				MTA_CSI_3
				MTA_code_on_civil_contact
				MTA_gold_rush
				MTA_civilian_auxiliary_1
				MTA_civilian_auxiliary_1a
				MTA_civilian_auxiliary_1b
				MTA_special_branch_idea
				MTA_special_branch_idea_2
				MTA_special_branch_idea_lar
				MTA_contingency_plans_idea
				
			}
			add_offsite_building = { type = arms_factory level = 20 }
			every_unit_leader = {
				retire = yes
			}
			create_field_marshal = {
				name = "Mustafa"
				portrait_path = "gfx/leaders/zebra/portrait_zebra_generic_operative_male_1.tga"
				traits = {
					zebra_race_trait
				}
				skill = 4
				attack_skill = 5
				defense_skill = 5
				planning_skill = 1
				logistics_skill = 2
			}
			every_other_country = {
				ROOT = {
					create_wargoal = { type = annex_everything target = PREV }
					add_opinion_modifier = {
						target = MTA
						modifier = mortal_enemies
					}
					add_opinion_modifier = {
						target = MTA
						modifier = CHN_embargo
					}
					reverse_add_opinion_modifier = {
						target = MTA
						modifier = mortal_enemies
					}
					reverse_add_opinion_modifier = {
						target = MTA
						modifier = CHN_embargo
					}
				}
			}
			every_neighbor_country = {
				limit = {
					NOT = { has_war_with = ROOT }
				}
				ROOT = {
					hidden_effect = {
						create_wargoal = { 
							type = annex_everything 
							target = PREV
						}
					}
					declare_war_on = { target = PREV type = annex_everything }
				}
			}
		}
	}
}
country_event = {
	id = marcycle.3
	immediate = {log = "[GetDateText]: [Root.GetName]: event marcycle.3"}
	hidden = yes

	trigger = {
		tag = MTA
		has_cosmetic_tag = MTA_eotc
		any_neighbor_country = {
			NOT = { has_war_with = ROOT }
		}
	}

	option = {
		every_neighbor_country = {
			limit = {
				NOT = {
					has_war_with = ROOT
				}
			}
			ROOT = { 
				hidden_effect = {
					create_wargoal = { 
						type = annex_everything
						target = PREV
					}
				}
				declare_war_on = { target = PREV type = annex_everything } 
			}
		}
	}
}
